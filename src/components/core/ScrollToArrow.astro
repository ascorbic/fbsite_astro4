<div id="scrollArrowbottom" class="fixed right-1 bottom-1 xl:right-5 xl:bottom-5 hidden z-50 lg:text-2xl">
  <i class="fa fa-arrow-down cursor-pointer	"></i>
</div>

<script>
  
const getViewportHeight = (): number => {
  const body = document.body;
  const html = document.documentElement;

  return Math.max( body.scrollHeight, body.offsetHeight, 
                       html.clientHeight, html.scrollHeight, html.offsetHeight );

}
// const options = {
//   root: document.querySelector('.epage'),
//   rootMargin: '0px',
//   threshold: 1.0
// }

// let observer = new IntersectionObserver((entries, observer) => {
//   console.log(entries, observer)
// }, options);

// let target = document.querySelector('#showArrowScroll');
// observer.observe(target);
const scrollArrowbottomEl: HTMLElement = document.querySelector('#scrollArrowbottom');

const iconEl: HTMLElement = document.querySelector('#scrollArrowbottom > .fa');
const triggerEl: HTMLElement = document.getElementById("showArrowScrollTrigger");
const footerEl: HTMLElement = document.querySelector(".footer");

let target = '.footer';
let isAfterHalfPage = false;

iconEl.addEventListener('click', () => {
  // scrollToBottom
  
  
  document.querySelector(isAfterHalfPage ? 'header' : '.footer')
    .scrollIntoView({behavior: "smooth", block: "start", inline: "nearest"});
})

const observerArrowDown = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      isAfterHalfPage = window.scrollY > (getViewportHeight()/2)
      scrollArrowbottomEl.style.display = 'block'
      iconEl.classList.remove('fa-arrow-up');
      iconEl.classList.add('fa-arrow-down');
    }
  })
})
observerArrowDown.observe(triggerEl)


const observerFooter = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      isAfterHalfPage = window.scrollY > (getViewportHeight()/2)
      scrollArrowbottomEl.style.display = 'block'
      iconEl.classList.remove('fa-arrow-down');
      iconEl.classList.add('fa-arrow-up');
    }
  })
})
observerFooter.observe(footerEl)


</script>